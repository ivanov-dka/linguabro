<%@ Page Title="Home Page" Language="C#" MasterPageFile="~/Site.Mobile.Master" AutoEventWireup="true" CodeBehind="MobileSubs.aspx.cs" Inherits="LinguaBroAuth.MobileSubs" %>

<asp:Content ID="BodyContent" ContentPlaceHolderID="MainContent" runat="server">
    <script src="Scripts/jquery-1.10.2.min.js"></script>
    <!--Reference the SignalR library. -->
    <script src="Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="signalr/hubs"></script>
    <script type="text/javascript">
        $(function () {
            // Declare a proxy to reference the hub. 
            var chat = $.connection.linguaHub;

            //синхронизация видео
            chat.client.syncTime = function (second) {
                console.log('second is ' + second);
                //если на странице видео - мотаем его
                seekToTime(second);

                //если на странице сабы - мотаем их
                seekToSub(second);
            };

            //подключение к хабу
            $.connection.hub.start().done(function () {

                try {
                    var lastTimeUpdate = 0;
                    //событие перемотки видео
                    $('video').get(0).ontimeupdate = function () {
                        if (Date.now() - lastTimeUpdate > 500) {
                            console.log('ontimeupdate');

                            var second = parseInt(this.currentTime, 10);
                            chat.server.send(second);

                            lastTimeUpdate = Date.now();
                        }
                    };
                }
                catch (e) {
                    console.log('lastTimeUpdate error');
                }

                try {
                    var lastTimeTranslate = 0;
                    //событие клика по субтитру
                    $("#subs .sub").on("click", function () {
                        if (Date.now() - lastTimeTranslate > 500) {
                            fakeTranslate($(this).text());
                            //translate($(this).text());
                            lastTimeTranslate = Date.now();
                        }
                    });
                }
                catch (e) {
                    console.log('lastTimeTranslate error');
                }

                setScroll();
            });
        });

        //перемотка видео
        function seekToTime(ts) {
            var video_element = $('video').get(0);

            if (Math.abs(video_element.currentTime - ts) > 2) {
                // try and avoid pauses after seeking
                video_element.pause();

                video_element.currentTime = ts; // if this is far enough away from current, it implies a "play" call as well...oddly. I mean seriously that is junk.
                // however if it close enough, then we need to call play manually
                // some shenanigans to try and work around this:
                var timer = setInterval(function () {
                    if (video_element.paused && video_element.readyState == 4 || !video_element.paused) {
                        video_element.play();
                        clearInterval(timer);
                    }
                }, 50);
            }
        }

        //перемотка сабов
        function seekToSub(ts) {

        }

        //фейк перевод
        function fakeTranslate(word) {
            console.log('translation: ' + translation);
            showTranslation(translation);
        }

        //перевести слово
        function translate(word) {
            var url = "https://translate.yandex.net/api/v1.5/tr.json/translate?key=trnsl.1.1.20170928T163527Z.fbfebe4278d9622f.bfd4d9aacf6e694e4c44897c6c3ff53e684f6f23&lang=en-ru&format=plain&text=" + word;
            $.getJSON(url, function (result) {
                if (result.status == 200) {
                    var translation = result.responseJSON.text[0];
                    console.log('translation: ' + translation);
                    showTranslation(translation);
                }
            });
        }

        function showTranslation(word) {

        }

        //настройка скролла
        function setScroll() {
            console.clear();

            const THRESH = 10;

            const $ = selector => document.querySelector(selector);
            const $$ = selector => document.querySelectorAll(selector);

            const items = $$("li");
            const style = getComputedStyle(document.body);
            // const chromeWidth = style.getPropertyValue("--chrome");
            const chromeWidth = 22.5;

            const setCustomProperty = (property, value) => {
                style.setProperty("--${property}", value);
            };

            let notchRect = $(".notch").getBoundingClientRect();

            window.addEventListener("resize", () => {
                notchRect = $(".notch").getBoundingClientRect();
            });

            bumpItems();

            $(".inner").onscroll = onScroll;

            function onScroll(e) {
                window.requestAnimationFrame(bumpItems);
            }

            function bumpItems() {
                for (let item of items) {
                    const itemRect = item.getBoundingClientRect();
                    const distFromBottom = itemRect.top - notchRect.bottom;
                    const distFromTop = itemRect.bottom - notchRect.top;

                    if (Math.abs(distFromTop) < THRESH) {
                        item.style.transform = `translateX(${lerp(
                            0,
                            chromeWidth,
                            (distFromTop + THRESH) / (THRESH * 2)
                        )}px)`;
                    } else if (
                        distFromTop > 0 &&
                        Math.abs(distFromBottom) > THRESH &&
                        distFromBottom < 0
                    ) {
                        item.style.transform = `translateX(${chromeWidth}px)`;
                    } else if (Math.abs(distFromBottom) < THRESH) {
                        item.style.transform = `translateX(${lerp(
                            chromeWidth,
                            0,
                            (distFromBottom + THRESH) / (THRESH * 2)
                        )}px)`;
                    } else {
                        item.style.transform = `translateX(0)`;
                    }
                }
            }

            function lerp(v0, v1, t) {
                return v0 * (1 - t) + v1 * t;
            }
        }
    </script>

    <style>
        :root {
            --width: 100vw;
            --height: 100vh;
            --max-height: 100%;
            --chrome: 22.5px;
            --outer-border-radius: 25px;
            --thumb-radius: 0px;
        }

        html {
            box-sizing: border-box;
        }

        * {
            box-sizing: inherit;
        }

        body {
            min-height: 100vh;
            display: flex;
            align-items: center;
            background: black;/*radial-gradient(turquoise, midnightblue);*/
            font-weight: lighter;
            font-size: 15px;
            margin:0px;
        }

        .outer {
            position: relative;
            margin: 0 auto;
            width: var(--width);
            height: var(--height);
            border-radius: var(--outer-border-radius);
            border: solid 0px buttonface;
            display: flex;
            align-items: center;
        }

        .inner {
            background: white;
            /*   position: absolute; */
            margin: 0 auto;
            width: calc(100% - var(--chrome));
            height: calc(100% - var(--chrome));
            border-radius: calc(var(--chrome) - 10px);
            overflow-y: scroll;
            overflow-x: hidden;
        }

        .notch {
            position: absolute;
            background: orange;
            width: 3%;
            max-width: 20px;
            height: 50%;
            top: 30%;
            left: calc(var(--chrome)/2);
            border-radius: 0 10px 10px 0;
        }

        ul {
            padding-left: calc(var(--chrome)/4);
            padding-right: 10px;
            margin: 5px 0;
            overflow: hidden;
        }

        li {
            list-style: none;
            padding: 5px 5px;
            border-bottom: 1px solid #dadada;
            transform-origin: center left;
        }

        *::-webkit-scrollbar {
            width: 5px;
            padding: 100px;
            transform: scalex(10);
        }

        *::-webkit-scrollbar-thumb {
            border-radius: var(--thumb-radius);
            background-color: #5555;
            padding-right: 5px;
            transform: scalex(10);
        }
        .selected {
            font-weight:bold;
        }
    </style>

    <div class="outer">
        <div class="inner">
            <ul>
                <li class="selected">SweeTango </li>
                <li>Pacific Rose</li>
                <li>SnapDragon</li>
                <li>Envy</li>
                <li>Koru (Plumac)</li>
                <li>Pink Lady (Cripps Pink)</li>
                <li>Honeycrisp</li>
                <li>Royal Gala</li>
                <li>Macoun</li>
                <li>McIntosh</li>
                <li>Autumn Glory</li>
                <li>Opal</li>
                <li>Rome</li>
                <li>Red Delicious</li>
                <li>Golden Delicious</li>
                <li>Cameo</li>
                <li>Granny Smith</li>
                <li>Rainier Gala</li>
                <li>SweeTango </li>
                <li>Pacific Rose</li>
                <li>SnapDragon</li>
                <li>Envy</li>
                <li>Koru (Plumac)</li>
                <li>Pink Lady (Cripps Pink)</li>
                <li>Honeycrisp</li>
                <li>Royal Gala</li>
                <li>Macoun</li>
                <li>McIntosh</li>
                <li>Autumn Glory</li>
                <li>Opal</li>
                <li>Rome</li>
                <li>Red Delicious</li>
                <li>Golden Delicious</li>
                <li>Cameo</li>
                <li>Granny Smith</li>
                <li>Rainier Gala</li>
                <li>SweeTango </li>
                <li>Pacific Rose</li>
                <li>SnapDragon</li>
                <li>Envy</li>
                <li>Koru (Plumac)</li>
                <li>Pink Lady (Cripps Pink)</li>
                <li>Honeycrisp</li>
                <li>Royal Gala</li>
                <li>Macoun</li>
                <li>McIntosh</li>
                <li>Autumn Glory</li>
                <li>Opal</li>
                <li>Rome</li>
                <li>Red Delicious</li>
                <li>Golden Delicious</li>
                <li>Cameo</li>
                <li>Granny Smith</li>
                <li>Rainier Gala</li>
                <li>SweeTango </li>
                <li>Pacific Rose</li>
                <li>SnapDragon</li>
                <li>Envy</li>
                <li>Koru (Plumac)</li>
                <li>Pink Lady (Cripps Pink)</li>
                <li>Honeycrisp</li>
                <li>Royal Gala</li>
                <li>Macoun</li>
                <li>McIntosh</li>
                <li>Autumn Glory</li>
                <li>Opal</li>
                <li>Rome</li>
                <li>Red Delicious</li>
                <li>Golden Delicious</li>
                <li>Cameo</li>
                <li>Granny Smith</li>
                <li>Rainier Gala</li>
            </ul>
            <div class="notch"></div>
        </div>
    </div>


</asp:Content>
